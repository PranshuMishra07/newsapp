{"ast":null,"code":"var _jsxFileName = \"/home/pranshu/git_workplace/plexus/src/Component/Presentation.js\";\nimport React, { Component } from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Grid from '@material-ui/core/Grid';\nimport posed from 'react-pose';\nconst Box = posed.div({\n  hidden: {\n    opacity: 0\n  },\n  visible: {\n    opacity: 1\n  }\n});\nexport default class Presentation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expanded: null,\n      isVisible: true\n    };\n\n    this.handleChange = id => expanded => {\n      this.setState(preState => {\n        return {\n          expanded: preState.expanded === id ? false : id\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({\n        isVisible: !this.state.isVisible\n      });\n    }, 1000);\n  } // showLoader = () => {\n  //     return <Box className=\"box\" pose={this.state.isVisible ? 'visible' : 'hidden'} />;\n  // }\n\n\n  render() {\n    const _this$state = this.state,\n          expanded = _this$state.expanded,\n          isVisible = _this$state.isVisible; // console.log(this.props);\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.props.data.length === 0 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Box, {\n      className: \"box\",\n      pose: isVisible ? 'visible' : 'hidden',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), \";\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.data.map((value, id) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(ExpansionPanel, {\n      square: true,\n      expanded: expanded === id,\n      onChange: this.handleChange(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      wrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \" \", React.createElement(\"img\", {\n      src: value.urlToImage,\n      alt: \"no image found\",\n      style: {\n        width: '80px',\n        height: '80px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), \" \"), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, value.title), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, value.source.name), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, value.publishedAt))), React.createElement(ExpansionPanelDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" \", value.content, \" \"), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: value.url,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, value.url, \" \"), \" \"), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, value.author, \" \")))))))));\n  }\n\n}","map":{"version":3,"sources":["/home/pranshu/git_workplace/plexus/src/Component/Presentation.js"],"names":["React","Component","ExpansionPanel","ExpansionPanelDetails","ExpansionPanelSummary","Grid","posed","Box","div","hidden","opacity","visible","Presentation","state","expanded","isVisible","handleChange","id","setState","preState","componentDidMount","setInterval","render","props","data","length","map","value","urlToImage","width","height","title","source","name","publishedAt","content","url","author"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Grid from '@material-ui/core/Grid';\nimport posed from 'react-pose';\n\n\nconst Box = posed.div({\n    hidden: { opacity: 0 },\n    visible: { opacity: 1 }\n});\n\nexport default class Presentation extends Component {\n    state = {\n        expanded: null,\n        isVisible: true,\n    }\n\n    componentDidMount() {\n        setInterval(() => {\n            this.setState({ isVisible: !this.state.isVisible });\n        }, 1000);\n    }\n\n    // showLoader = () => {\n    //     return <Box className=\"box\" pose={this.state.isVisible ? 'visible' : 'hidden'} />;\n    // }\n\n    handleChange = id => (expanded) => {\n        this.setState((preState) => {\n            return { expanded: preState.expanded === id ? false : id }\n        });\n    };\n\n    render() {\n        const { expanded,isVisible } = this.state;\n        // console.log(this.props);\n        return (\n            <div>\n                <div>\n\n                    {this.props.data.length === 0\n                        ? <div>\n                            <Box className=\"box\" pose={isVisible ? 'visible' : 'hidden'} />;\n                        </div>\n                        :\n                        <div>\n\n                            {this.props.data.map((value, id) => (\n                                <div>\n                                    <ExpansionPanel square expanded={expanded === id} onChange={this.handleChange(id)}>\n                                        <ExpansionPanelSummary >\n                                            <Grid container spacing={16} wrap >\n                                                <Grid item xs={1}> <img src={value.urlToImage} alt=\"no image found\" style={{ width: '80px', height: '80px' }} /> </Grid>\n                                                <Grid item xs={8}>{value.title}</Grid>\n                                                <Grid item xs={2}>{value.source.name}</Grid>\n                                                <Grid item xs={1}>{value.publishedAt}</Grid>\n                                            </Grid>\n                                        </ExpansionPanelSummary>\n                                        <ExpansionPanelDetails>\n                                            <Grid container spacing={16}>\n                                                <Grid item xs={12}> {value.content} </Grid>\n                                                <Grid item xs={10}><a href={value.url} target=\"_blank\" >{value.url} </a> </Grid>\n                                                <Grid item xs={2}>{value.author} </Grid>\n                                            </Grid>\n                                        </ExpansionPanelDetails>\n                                    </ExpansionPanel>\n                                </div>\n                            ))\n                            }\n                        </div>\n                    }\n                </div>\n            </div>\n\n        )\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/pranshu/git_workplace/plexus/src/Presentation.js\";\nimport React, { Component } from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Grid from '@material-ui/core/Grid';\nexport default class Presentation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expanded: 0\n    };\n\n    this.showLoader = () => {\n      return React.createElement(\"div\", {\n        className: \"pre-loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Loading...\");\n    };\n\n    this.handleChange = id => expanded => {\n      this.setState(preState => {\n        return {\n          expanded: preState.expanded === id ? false : id\n        };\n      });\n    };\n  }\n\n  render() {\n    const expanded = this.state.expanded;\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.loading === true ? this.showLoader() : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.props.data.map((value, id) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(ExpansionPanel, {\n      square: true,\n      expanded: expanded === id,\n      onChange: this.handleChange(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      wrap: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \" \", React.createElement(\"img\", {\n      src: value.urlToImage,\n      alt: \"no image found\",\n      style: {\n        width: '100px',\n        height: '100px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), \" \"), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, value.title), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, value.source.name), React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, value.publishedAt))), React.createElement(ExpansionPanelDetails, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \" \", value.content, \" \"), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: value.url,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, value.url, \" \"), \" \"), React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, value.author, \" \")))))))));\n  }\n\n}","map":{"version":3,"sources":["/home/pranshu/git_workplace/plexus/src/Presentation.js"],"names":["React","Component","ExpansionPanel","ExpansionPanelDetails","ExpansionPanelSummary","Grid","Presentation","state","expanded","showLoader","handleChange","id","setState","preState","render","console","log","props","loading","data","map","value","urlToImage","width","height","title","source","name","publishedAt","content","url","author"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Grid from '@material-ui/core/Grid';\n\nexport default class Presentation extends Component {\n    state={\n        expanded:0\n    }\n\n    showLoader=()=> {\n        return (\n            <div className=\"pre-loader\" >\n            Loading...\n        </div>\n        );\n    }\n\n\n\n    handleChange = id => (expanded) => {\n        this.setState((preState)=>{\n            return {expanded:preState.expanded===id?false:id  }\n        });\n    };\n\n    render() {\n        const {expanded}=this.state;\n        console.log(this.props);\n        return (\n            <div>\n                <div>\n                \n                {this.props.loading===true\n                ? this.showLoader()\n                :\n                <div>\n                \n                { this.props.data.map((value,id)=> (\n                    <div>\n                    <ExpansionPanel square expanded={expanded === id} onChange={this.handleChange(id)}>\n                        <ExpansionPanelSummary >\n                                {/* <Typography className={classes.heading}>General settings</Typography>\n                                <Typography className={classes.secondaryHeading}>I am an expansion ttttt</Typography> */}\n                                <Grid container spacing={16} wrap >\n                                    <Grid item xs={2}> <img src={value.urlToImage} alt=\"no image found\" style={{width:'100px',height:'100px'}} /> </Grid>\n                                    <Grid item xs={8}>{value.title}</Grid>\n                                    <Grid item xs={1}>{value.source.name}</Grid>\n                                    <Grid item xs={1}>{value.publishedAt}</Grid>\n                                </Grid>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                        <Grid container spacing={16}>                     \n                                    <Grid item xs={12}> {value.content} </Grid>\n                                    <Grid item xs={10}><a href={value.url} target=\"_blank\" >{value.url} </a> </Grid>\n                                    <Grid item xs={2}>{value.author} </Grid>\n                                </Grid>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n            </div>\n\n\n                ))\n                }\n            </div>\n                }\n                </div>\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}
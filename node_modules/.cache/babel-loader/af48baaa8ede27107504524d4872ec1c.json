{"ast":null,"code":"var _jsxFileName = \"/home/pranshu/git_workplace/plexus/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: null,\n      loading: false,\n      value: ''\n    };\n\n    this.search = async val => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios(\"https://api.themoviedb.org/3/search/movie?query=\".concat(val, \"&api_key=dbc0a6d62448554c27b6167ef7dabb1b\"));\n      const movies = await res.data.results;\n      this.setState({\n        movies,\n        loading: false\n      });\n    };\n\n    this.onChangeHandler = async e => {\n      this.search(e.target.value);\n      this.setState({\n        value: e.target.value\n      });\n    };\n  }\n\n  get renderMovies() {\n    let movies = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"There's no movies\");\n\n    if (this.state.movies) {\n      movies = React.createElement(Movies, {\n        list: this.state.movies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }\n\n    return movies;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.value,\n      onChange: e => this.onChangeHandler(e),\n      placeholder: \"Type something to search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), this.renderMovies);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/pranshu/git_workplace/plexus/src/App.js"],"names":["React","Component","axios","App","state","movies","loading","value","search","val","setState","res","data","results","onChangeHandler","e","target","renderMovies","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACNC,MAAAA,MAAM,EAAE,IADF;AAENC,MAAAA,OAAO,EAAE,KAFH;AAGNC,MAAAA,KAAK,EAAE;AAHD,KADkB;;AAAA,SAO1BC,MAP0B,GAOjB,MAAMC,GAAN,IAAa;AACpB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAMK,GAAG,GAAG,MAAMT,KAAK,2DAC8BO,GAD9B,+CAAvB;AAGA,YAAMJ,MAAM,GAAG,MAAMM,GAAG,CAACC,IAAJ,CAASC,OAA9B;AAEA,WAAKH,QAAL,CAAc;AAAEL,QAAAA,MAAF;AAAUC,QAAAA,OAAO,EAAE;AAAnB,OAAd;AACD,KAfyB;;AAAA,SAiB1BQ,eAjB0B,GAiBR,MAAMC,CAAN,IAAW;AAC3B,WAAKP,MAAL,CAAYO,CAAC,CAACC,MAAF,CAAST,KAArB;AACA,WAAKG,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAEQ,CAAC,CAACC,MAAF,CAAST;AAAlB,OAAd;AACD,KApByB;AAAA;;AAsB1B,MAAIU,YAAJ,GAAmB;AACjB,QAAIZ,MAAM,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAb;;AACA,QAAI,KAAKD,KAAL,CAAWC,MAAf,EAAuB;AACrBA,MAAAA,MAAM,GAAG,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAT;AACD;;AAED,WAAOA,MAAP;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWG,KADpB;AAEE,MAAA,QAAQ,EAAEQ,CAAC,IAAI,KAAKD,eAAL,CAAqBC,CAArB,CAFjB;AAGE,MAAA,WAAW,EAAC,0BAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMG,KAAKE,YANR,CADF;AAUD;;AA1CyB;;AA6C5B,eAAed,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    movies: null,\n    loading: false,\n    value: ''\n  };\n\n  search = async val => {\n    this.setState({ loading: true });\n    const res = await axios(\n      `https://api.themoviedb.org/3/search/movie?query=${val}&api_key=dbc0a6d62448554c27b6167ef7dabb1b`\n    );\n    const movies = await res.data.results;\n\n    this.setState({ movies, loading: false });\n  };\n\n  onChangeHandler = async e => {\n    this.search(e.target.value);\n    this.setState({ value: e.target.value });\n  };\n\n  get renderMovies() {\n    let movies = <h1>There's no movies</h1>;\n    if (this.state.movies) {\n      movies = <Movies list={this.state.movies} />;\n    }\n\n    return movies;\n  }\n\n  render() {\n    return (\n      <div>\n        <input\n          value={this.state.value}\n          onChange={e => this.onChangeHandler(e)}\n          placeholder=\"Type something to search\"\n        />\n        {this.renderMovies}\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
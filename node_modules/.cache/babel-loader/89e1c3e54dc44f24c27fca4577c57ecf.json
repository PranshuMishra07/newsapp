{"ast":null,"code":"var _jsxFileName = \"/home/pranshu/git_workplace/newsapp/src/Component/Presentation.js\";\nimport React, { Component } from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles'; // import classnames from 'classnames';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ListView from \"./List\";\nimport posed from 'react-pose';\nimport \"./Home.scss\";\nimport { Paper } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Divider from '@material-ui/core/Divider';\nconst Box = posed.div({\n  hidden: {\n    opacity: 0\n  },\n  visible: {\n    opacity: 1\n  }\n});\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    // maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto',\n    maxHeight: 600\n  },\n  listSection: {\n    backgroundColor: 'inherit'\n  },\n  ul: {\n    backgroundColor: 'inherit',\n    padding: 0\n  },\n  card: {\n    maxWidth: '100%'\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n\n  },\n  actions: {\n    display: 'flex'\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n});\n\nclass Presentation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expanded: null,\n      isVisible: true,\n      id: 0\n    };\n\n    this.handleExpandClick = () => {\n      this.setState(state => ({\n        expanded: !state.expanded\n      }));\n    };\n\n    this.handleChange = id => expanded => {\n      this.setState(preState => {\n        return {\n          expanded: preState.expanded === id ? false : id,\n          id: id\n        };\n      });\n      return id;\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.data.length === 0) {\n      setInterval(() => {\n        this.setState({\n          isVisible: !this.state.isVisible\n        });\n      }, 500);\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          expanded = _this$state.expanded,\n          isVisible = _this$state.isVisible,\n          id = _this$state.id;\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          data = _this$props.data;\n    return React.createElement(Grid, {\n      container: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.props.data.length === 0 ? React.createElement(Grid, {\n      container: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Box, {\n      className: \"box\",\n      pose: isVisible ? 'visible' : 'hidden',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })) : React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      className: \"Left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      avatar: React.createElement(Avatar, {\n        \"aria-label\": \"Recipe\",\n        className: classes.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, data[id].source.name.charAt(0).toUpperCase()),\n      action: React.createElement(IconButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })),\n      title: data[id].source.name,\n      subheader: data[id].publishedAt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(CardMedia, {\n      className: classes.media,\n      image: data[id].urlToImage,\n      title: \"Paella dish\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, data[id].content)))), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      className: \"Right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(List, {\n      className: classes.root,\n      subheader: React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, data.map((value, id) => React.createElement(\"li\", {\n      key: \"section-\".concat(value),\n      className: classes.listSection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: classes.ul,\n      onClick: this.handleChange(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(ListSubheader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"\".concat(value.source.name)), React.createElement(ListItem, {\n      button: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: value.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default withStyles(styles)(Presentation);","map":{"version":3,"sources":["/home/pranshu/git_workplace/newsapp/src/Component/Presentation.js"],"names":["React","Component","ExpansionPanel","ExpansionPanelDetails","ExpansionPanelSummary","Grid","PropTypes","withStyles","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","red","FavoriteIcon","ShareIcon","ExpandMoreIcon","MoreVertIcon","ListView","posed","Paper","List","ListItem","ListItemText","ListSubheader","Divider","Box","div","hidden","opacity","visible","styles","theme","root","width","backgroundColor","palette","background","paper","position","overflow","maxHeight","listSection","ul","padding","card","maxWidth","media","height","paddingTop","actions","display","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","Presentation","state","expanded","isVisible","id","handleExpandClick","setState","handleChange","preState","componentDidMount","props","data","length","setInterval","render","classes","source","name","charAt","toUpperCase","publishedAt","urlToImage","content","map","value","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n// import classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ListView from \"./List\"\nimport posed from 'react-pose';\nimport \"./Home.scss\";\nimport { Paper } from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Divider from '@material-ui/core/Divider';\n\n\n\nconst Box = posed.div({\n    hidden: { opacity: 0 },\n    visible: { opacity: 1 }\n});\n\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        // maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 600\n    },\n    listSection: {\n        backgroundColor: 'inherit',\n    },\n    ul: {\n        backgroundColor: 'inherit',\n        padding: 0,\n    },\n    card: {\n        maxWidth: '100%',\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    actions: {\n        display: 'flex',\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n});\nclass Presentation extends Component {\n    state = {\n        expanded: null,\n        isVisible: true,\n        id: 0,\n    }\n\n    handleExpandClick = () => {\n        this.setState(state => ({ expanded: !state.expanded }));\n    };\n\n    componentDidMount() {\n        if (this.props.data.length === 0) {\n            setInterval(() => {\n                this.setState({ isVisible: !this.state.isVisible });\n            }, 500);\n        }\n    }\n    handleChange = id => (expanded) => {\n        this.setState((preState) => {\n            return { expanded: preState.expanded === id ? false : id, id: id }\n        });\n        return id;\n    };\n\n\n    render() {\n        const { expanded, isVisible, id } = this.state;\n        const { classes, data } = this.props;\n        return (\n            <Grid container xs={12}>\n                {\n                    this.props.data.length === 0 ? <Grid container xs={12}>\n                        <Box className=\"box\" pose={isVisible ? 'visible' : 'hidden'} />\n                    </Grid>\n                        : <Grid container >\n                            <Grid item xs={6} className=\"Left\">\n                                <Card className={classes.card}>\n                                    <CardHeader\n                                        avatar={\n                                            <Avatar aria-label=\"Recipe\" className={classes.avatar}>\n                                                {data[id].source.name.charAt(0).toUpperCase()}\n                                            </Avatar>\n                                        }\n                                        action={\n                                            <IconButton >\n                                                <ExpandMoreIcon />\n                                            </IconButton>\n                                        }\n                                        title={data[id].source.name}\n                                        subheader={data[id].publishedAt}\n                                    />\n                                    <CardMedia\n                                        className={classes.media}\n                                        image={data[id].urlToImage}\n                                        title=\"Paella dish\"\n                                    />\n                                    <CardContent>\n                                        <Typography component=\"p\">\n                                            {data[id].content}\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n\n                            </Grid>\n                            <Grid item xs={6} className=\"Right\">\n                                <List className={classes.root} subheader={<li />}>\n                                    {data.map((value, id) => (\n                                        <li key={`section-${value}`} className={classes.listSection}>\n                                            <ul className={classes.ul} onClick={this.handleChange(id)}>\n                                                <ListSubheader>{`${value.source.name}`}</ListSubheader>\n                                                <ListItem button>\n                                                    <ListItemText primary={value.title} />\n                                                </ListItem>\n                                                <Divider />\n                                            </ul>\n                                        </li>\n                                    ))}\n                                </List>\n                            </Grid>\n                        </Grid>\n\n\n                }\n            </Grid>\n        )\n    }\n}\n\n\nexport default withStyles(styles)(Presentation);\n"]},"metadata":{},"sourceType":"module"}
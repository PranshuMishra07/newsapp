{"ast":null,"code":"var _jsxFileName = \"/home/pranshu/git_workplace/plexus/src/Expansion.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Suggestions from './Suggestion';\nconst API_KEY = process.env.API_KEY;\nconst API_URL = 'http://api.musicgraph.com/api/v2/artist/suggest';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: '',\n      results: []\n    };\n\n    this.getInfo = () => {\n      axios.get(\"\".concat(API_URL, \"?api_key=\").concat(API_KEY, \"&prefix=\").concat(this.state.query, \"&limit=7\")).then(({\n        data\n      }) => {\n        this.setState({\n          results: data.data // MusicGraph returns an object named data, \n          // as does axios. So... data.data                             \n\n        });\n      });\n    };\n\n    this.handleInputChange = () => {\n      this.setState({\n        query: this.search.value\n      }, () => {\n        if (this.state.query && this.state.query.length > 1) {\n          if (this.state.query.length % 2 === 0) {\n            this.getInfo();\n          }\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Search for...\",\n      ref: input => this.search = input,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Suggestions, {\n      results: this.state.results,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/pranshu/git_workplace/plexus/src/Expansion.js"],"names":["React","Component","axios","Suggestions","API_KEY","process","env","API_URL","Search","state","query","results","getInfo","get","then","data","setState","handleInputChange","search","value","length","render","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;MAEQC,O,GAAYC,OAAO,CAACC,G,CAApBF,O;AACR,MAAMG,OAAO,GAAG,iDAAhB;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAAA;AAAA;AAAA,SACvBQ,KADuB,GACf;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADe;;AAAA,SAMvBC,OANuB,GAMb,MAAM;AACZV,MAAAA,KAAK,CAACW,GAAN,WAAaN,OAAb,sBAAgCH,OAAhC,qBAAkD,KAAKK,KAAL,CAAWC,KAA7D,eACCI,IADD,CACM,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AAChB,aAAKC,QAAL,CAAc;AACdL,UAAAA,OAAO,EAAEI,IAAI,CAACA,IADA,CACK;AACC;;AAFN,SAAd;AAIH,OAND;AAOH,KAdsB;;AAAA,SAgBvBE,iBAhBuB,GAgBH,MAAM;AACtB,WAAKD,QAAL,CAAc;AACdN,QAAAA,KAAK,EAAE,KAAKQ,MAAL,CAAYC;AADL,OAAd,EAEG,MAAM;AACT,YAAI,KAAKV,KAAL,CAAWC,KAAX,IAAoB,KAAKD,KAAL,CAAWC,KAAX,CAAiBU,MAAjB,GAA0B,CAAlD,EAAqD;AACjD,cAAI,KAAKX,KAAL,CAAWC,KAAX,CAAiBU,MAAjB,GAA0B,CAA1B,KAAgC,CAApC,EAAuC;AACvC,iBAAKR,OAAL;AACC;AACJ;AACA,OARD;AASH,KA1BsB;AAAA;;AA4BvBS,EAAAA,MAAM,GAAG;AACL,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACA,MAAA,WAAW,EAAC,eADZ;AAEA,MAAA,GAAG,EAAEC,KAAK,IAAI,KAAKJ,MAAL,GAAcI,KAF5B;AAGA,MAAA,QAAQ,EAAE,KAAKL,iBAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWE,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADA;AAUH;;AAvCsB;;AA0C/B,eAAeH,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport Suggestions from './Suggestion'\n\nconst { API_KEY } = process.env\nconst API_URL = 'http://api.musicgraph.com/api/v2/artist/suggest'\n\nclass Search extends Component {\n        state = {\n            query: '',\n            results: []\n        }\n\n        getInfo = () => {\n            axios.get(`${API_URL}?api_key=${API_KEY}&prefix=${this.state.query}&limit=7`)\n            .then(({ data }) => {\n                this.setState({\n                results: data.data // MusicGraph returns an object named data, \n                                    // as does axios. So... data.data                             \n                })\n            })\n        }\n\n        handleInputChange = () => {\n            this.setState({\n            query: this.search.value\n            }, () => {\n            if (this.state.query && this.state.query.length > 1) {\n                if (this.state.query.length % 2 === 0) {\n                this.getInfo()\n                }\n            } \n            })\n        }\n\n        render() {\n            return (\n            <form>\n                <input\n                placeholder=\"Search for...\"\n                ref={input => this.search = input}\n                onChange={this.handleInputChange}\n                />\n                <Suggestions results={this.state.results} />\n            </form>\n            )\n        }\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}
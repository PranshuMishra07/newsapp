{"ast":null,"code":"var _jsxFileName = \"/home/pranshu/git_workplace/newsapp/src/Component/List.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    position: 'relative',\n    overflow: 'auto' // maxHeight: ,\n\n  },\n  listSection: {\n    backgroundColor: 'inherit'\n  },\n  ul: {\n    backgroundColor: 'inherit',\n    padding: 0\n  }\n});\n\nfunction ListView(props) {\n  const classes = props.classes,\n        data = props.data;\n  return React.createElement(List, {\n    className: classes.root,\n    subheader: React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, data.map((value, id) => React.createElement(\"li\", {\n    key: \"section-\".concat(value),\n    className: classes.listSection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: classes.ul,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(ListSubheader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"\".concat(value.title))))));\n}\n\nListView.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ListView);","map":{"version":3,"sources":["/home/pranshu/git_workplace/newsapp/src/Component/List.js"],"names":["React","PropTypes","withStyles","List","ListItem","ListItemText","ListSubheader","styles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","position","overflow","listSection","ul","padding","ListView","props","classes","data","map","value","id","title","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,MADL;AAEFC,IAAAA,QAAQ,EAAE,GAFR;AAGFC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC,KAHxC;AAIFC,IAAAA,QAAQ,EAAE,UAJR;AAKFC,IAAAA,QAAQ,EAAE,MALR,CAMF;;AANE,GADe;AASrBC,EAAAA,WAAW,EAAE;AACTN,IAAAA,eAAe,EAAE;AADR,GATQ;AAYrBO,EAAAA,EAAE,EAAE;AACAP,IAAAA,eAAe,EAAE,SADjB;AAEAQ,IAAAA,OAAO,EAAE;AAFT;AAZiB,CAAL,CAApB;;AAkBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,QACbC,OADa,GACID,KADJ,CACbC,OADa;AAAA,QACLC,IADK,GACIF,KADJ,CACLE,IADK;AAGrB,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAED,OAAO,CAACd,IAAzB;AAA+B,IAAA,SAAS,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKe,IAAI,CAACC,GAAL,CAAS,CAACC,KAAD,EAAOC,EAAP,KACN;AAAI,IAAA,GAAG,oBAAaD,KAAb,CAAP;AAA6B,IAAA,SAAS,EAAEH,OAAO,CAACL,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAEK,OAAO,CAACJ,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAmBO,KAAK,CAACE,KAAzB,EADJ,CADJ,CADH,CADL,CADJ;AAgBH;;AAEDP,QAAQ,CAACQ,SAAT,GAAqB;AACjBN,EAAAA,OAAO,EAAEtB,SAAS,CAAC6B,MAAV,CAAiBC;AADT,CAArB;AAIA,eAAe7B,UAAU,CAACK,MAAD,CAAV,CAAmBc,QAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n        // maxHeight: ,\n    },\n    listSection: {\n        backgroundColor: 'inherit',\n    },\n    ul: {\n        backgroundColor: 'inherit',\n        padding: 0,\n    },\n});\n\nfunction ListView(props) {\n    const { classes,data } = props;\n\n    return (\n        <List className={classes.root} subheader={<li />}>\n            {data.map((value,id )=> (\n                <li key={`section-${value}`} className={classes.listSection}>\n                    <ul className={classes.ul}>\n                        <ListSubheader>{`${value.title}`}</ListSubheader>\n                        {/* {[0, 1, 2].map(item => (\n                            <ListItem key={`item-${sectionId}-${item}`}>\n                                <ListItemText primary={`Item ${item}`} />\n                            </ListItem>\n                        ))} */}\n                    </ul>\n                </li>\n            ))}\n        </List>\n    );\n}\n\nListView.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ListView);"]},"metadata":{},"sourceType":"module"}